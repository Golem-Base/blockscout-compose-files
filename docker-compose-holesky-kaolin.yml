services:
  proxy:
    image: nginxproxy/nginx-proxy:1.8
    ports:
      - 443:443
      - 80:80
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - ./proxy.conf:/etc/nginx/conf.d/custom-proxy.conf

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes_from:
      - proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro

  db-init:
    image: postgres:17
    volumes:
      - blockscout-db-data:/var/lib/postgresql/data
    entrypoint:
      - sh
      - -c
      - |
        chown -R 2000:2000 /var/lib/postgresql/data

  db:
    image: postgres:17
    user: 2000:2000
    shm_size: 1gb
    restart: always
    container_name: "db"
    command: postgres -c 'max_connections=200' -c 'client_connection_check_interval=60000'
    environment:
      POSTGRES_DB: "blockscout"
      POSTGRES_USER: "blockscout"
      POSTGRES_PASSWORD: "ceWb1MeLBEeOIfk65gU8EjF8"
    volumes:
      - blockscout-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U blockscout -d blockscout"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis-db:
    image: "redis:alpine"
    container_name: redis-db
    command: redis-server
    volumes:
      - redis-data:/data

  backend:
    image: golemnetwork/blockscout-optimism:master
    pull_policy: always
    restart: always
    stop_grace_period: 5m
    container_name: "backend"
    command: sh -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/api/health/readiness"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    env_file:
      - ./envs/holesky.kaolin.backend.env
    environment:
      - VIRTUAL_HOST=api.kaolin.golem.neti-soft.dev
      - VIRTUAL_PORT=4000
      - LETSENCRYPT_HOST=api.kaolin.golem.neti-soft.dev
      - LETSENCRYPT_EMAIL=kacper.zuk@neti-soft.com
    volumes:
      - backend-logs:/app/logs/
      - backend-dets:/app/dets/
    depends_on:
      - db
      - redis-db
    links:
      - db:database
    profiles:
      - backend

  frontend:
    image: golemnetwork/blockscout-frontend:main
    pull_policy: always
    platform: linux/amd64
    restart: always
    container_name: "frontend"
    env_file:
      - ./envs/holesky.kaolin.frontend.env
    environment:
      - VIRTUAL_HOST=kaolin.golem.neti-soft.dev
      - LETSENCRYPT_HOST=kaolin.golem.neti-soft.dev
      - LETSENCRYPT_EMAIL=kacper.zuk@neti-soft.com
    profiles:
      - frontend

  golem-base-indexer:
    image: golemnetwork/blockscout-rs-neti:main
    restart: always
    container_name: "golem-base-indexer"
    env_file:
      - ./envs/golem-base-indexer.env
    environment:
      - VIRTUAL_HOST=golem-indexer.kaolin.golem.neti-soft.dev
      - VIRTUAL_PORT=8050
      - LETSENCRYPT_HOST=golem-indexer.kaolin.golem.neti-soft.dev
      - LETSENCRYPT_EMAIL=kacper.zuk@neti-soft.com
    volumes:
      - golem-base-indexer:/app/data/
    links:
      - db
    depends_on:
      - db
    profiles:
      - services

  op-init:
      image: alpine:latest
      command:
          - sh
          - -c
          - |
            set -e

            # Create config directory
            mkdir -p /config

            # Generate JWT secret if it doesn't exist
            if [ ! -f '/jwt/jwt' ]; then
              echo 'Generating JWT secret'
              mkdir -p /jwt
              # Generate a 32-byte random hex string for JWT secret
              apk add --no-cache openssl
              openssl rand -hex 32 > /jwt/jwt
              chmod 666 /jwt/jwt
              echo 'JWT secret generated successfully'
            else
              echo 'JWT secret already exists, skipping generation'
            fi
      volumes:
          - op_node_data:/op-node
          - jwt_shared:/jwt
  op-geth-init:
      image: golemnetwork/golembase-l3-op-geth:v1.101511.0-2.1-hoodi-kaolin-ef061ab3
      depends_on:
          op-init:
              condition: service_completed_successfully
      entrypoint: []
      command:
          - /bin/sh
          - -c
          - |
            set -e
            if [ ! -f '/geth/geth' ]; then
              echo 'Initializing geth data directory with genesis block...'

              # Use genesis file from op-init
              if ! geth init --state.scheme=hash --datadir='/geth' '/genesis.json'; then
                echo 'ERROR: Failed to initialize geth with genesis block'
                exit 1
              fi
              echo 'Geth initialized successfully with genesis block'
            else
              echo 'Geth data directory already initialized, skipping initialization'
            fi
      volumes:
          - op_geth_data:/geth
  op-geth:
      image: golemnetwork/golembase-l3-op-geth:v1.101511.0-2.1-hoodi-kaolin-ef061ab3
      restart: unless-stopped
      stop_grace_period: 5m
      depends_on:
          op-geth-init:
              condition: service_completed_successfully
      command:
          - --networkid=60138453025
          - --datadir=/geth
          - --http
          - --http.corsdomain=*
          - --http.vhosts=*
          - --http.addr=0.0.0.0
          - --http.port=8545
          - --http.api=admin,debug,eth,txpool,net,engine,web3,golembase,txpool
          - --ws
          - --ws.addr=0.0.0.0
          - --ws.port=8546
          - --ws.origins=*
          - --ws.api=admin,debug,eth,txpool,net,engine,web3,golembase,txpool
          - --syncmode=full
          - --gcmode=archive
          - --authrpc.vhosts=*
          - --authrpc.addr=0.0.0.0
          - --authrpc.port=8551
          - --authrpc.jwtsecret=/jwt/jwt
          - --usb=false
          - --state.scheme=hash
          - --nat=none
          - --bootnodes=enode://c4fed01d1b2c2b01dfe788ce473c55ad1d587eb0e610eea0954fd2ff83fd969320b2348985f8c424b4b372daff5148dc88673d527f1ec11303c517667889b1cf@37.27.230.18:46012,enode://c6dbe965efcc88886bd6a93c4712eb7f31c2b74568c4c3779a2946bd7d0a61e41223289a7b99de20b7138de7ca4a6f78d1c86b66b0d36e5f404dd03777a1f784@142.132.206.248:46014,enode://ddf47710a2b89bbb3f06401a96d4f58d5a80494098bb24098bcdc12c2070e3f311f91a97a4284a1cd38258ef6b8bfe06d46b1529f136850418bf836bac0cf1bb@116.202.192.224:46016,enode://35f052fd998ff149e9a56ead50b228c8ac8d994e5169e8bee3428c8c9337cba429fc5bb36539d65eee3f3019fb834029ea301c539fff1f1d63e72c2a07c3c2d6@5.9.17.176:46018,enode://6d5fcab4ae65295d3cadda4054ad506c89e53fd1d3756ca34dfff8ee71ded2bab353be647387c1f35d19bbc542f763a04eac109f7743f756c49e37e8349bc6d8@78.46.85.197:46020
          - --txpool.disable.non.golembase.transactions=true
      ports:
          - 127.0.0.1:8545:8545
      volumes:
          - op_geth_data:/geth
          - jwt_shared:/jwt
  op-node:
      image: golemnetwork/golembase-l3-op-node:v1.13.5-hoodi-kaolin-1915aadf
      restart: unless-stopped
      stop_grace_period: 5m
      depends_on:
          op-init:
              condition: service_completed_successfully
          op-geth:
              condition: service_started
      command:
          - op-node
          - --l1=https://l2.hoodi.arkiv.network/rpc
          - --l1.beacon.ignore=true
          - --l1.rpckind=standard
          - --l1.trustrpc
          - --l2=http://op-geth:8551
          - --l2.enginekind=geth
          - --l2.jwt-secret=/jwt/jwt
          - --rpc.addr=0.0.0.0
          - --rpc.port=9545
          - --p2p.nat=true
          - --p2p.ban.peers=false
          - --p2p.bootnodes=enr:-KG4QJikbst5gI1I41mvMCRnEwH0upXdRYhYsoKan6a2BKp_ac4FemRLJqNlnTvqtgIa1HDgzJLqHVPPd8LKAIZH2fuGAZmV3YCZgmlkgnY0gmlwhCUb5hKHb3BzdGFja4eh8J-E4AEAiXNlY3AyNTZrMaEDLHkXEUbE2Brs9IarFCZBPNPnN7AqQbkbol5lCrLt8eCDdGNwgrO9g3VkcIKzvQ,enr:-KG4QOX5DOIPxORaYxdKdcE7bsMZGcpBkkAv97O_tbUAEpKKOYtbTmA4mBgJqEq3CBLOaoKTbNVRiwz3umQUPZieJiOGAZmV3V7zgmlkgnY0gmlwhI6EzviHb3BzdGFja4eh8J-E4AEAiXNlY3AyNTZrMaED319S_mHwvJyJd_GOHypIlZ79wf0t_fCt4qeZtrTzolODdGNwgrO_g3VkcIKzvw,enr:-KG4QEPbn2lCZKtH_M-UlyON1nnbNl_GPNheT1-VeJUBpZ0tbb_3yhUNQfMtFNCc90TdfuISg7_9vEj2QBStRVDr9faGAZmV3WPTgmlkgnY0gmlwhHTKwOCHb3BzdGFja4eh8J-E4AEAiXNlY3AyNTZrMaECy2uwzfpra5hc4pwTmw0Cji38GKFjqpfLK-6vjy2V3W2DdGNwgrPBg3VkcIKzwQ,enr:-KG4QJpA9uKOIGIPeSYq9HFzVNAmWlI19fSWR_GLRiphrYIOfN_N7XmId5vYpqCb5X5Mol1gKt5f5BTUKbNRUsdFfzuGAZmV3XMAgmlkgnY0gmlwhAUJEbCHb3BzdGFja4eh8J-E4AEAiXNlY3AyNTZrMaED8L9EKSn4Lu7_k5shxydRy8OAay5Yg1GDc4O48WhmPKSDdGNwgrPDg3VkcIKzww,enr:-KG4QCdBja3LauI8FF-aSFiwdaxKo_e_8jnWF4CsC6SG-JyxSdxL_ZKU-pWNjqporZbvREx_kDQMK9XFQYsx2cxqUiaGAZmV3X_ogmlkgnY0gmlwhE4uVcWHb3BzdGFja4eh8J-E4AEAiXNlY3AyNTZrMaEC3u9yGf3xQxj-4ExbnMrzgjayxYngcCNCG3u_YtIdhk6DdGNwgrPFg3VkcIKzxQ
          - --p2p.listen.tcp=9222
          - --p2p.listen.udp=9222
          - --metrics.enabled
          - --metrics.addr=0.0.0.0
          - --metrics.port=7300
          - --syncmode=execution-layer
          - --rollup.config=/rollup.json
          - --log.level=info
      volumes:
          - jwt_shared:/jwt
          - op_node_data:/op-node

  stats-db-init:
    image: postgres:17
    volumes:
      - stats-db-data:/var/lib/postgresql/data
    entrypoint:
      - sh
      - -c
      - |
        chown -R 2000:2000 /var/lib/postgresql/data

  stats-db:
    image: postgres:17
    user: 2000:2000
    shm_size: 256m
    restart: always
    container_name: 'stats-db'
    command: postgres -c 'max_connections=200'
    environment:
        POSTGRES_DB: 'stats'
        POSTGRES_USER: 'stats'
    volumes:
      - stats-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stats -d stats"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  stats:
    image: ghcr.io/blockscout/stats:latest
    pull_policy: always
    platform: linux/amd64
    restart: always
    container_name: 'stats'
    environment:
      - STATS__CREATE_DATABASE=true
      - STATS__RUN_MIGRATIONS=true
      - STATS__BLOCKSCOUT_API_URL=https://api.kaolin.golem.neti-soft.dev
      - STATS__SERVER__HTTP__CORS__ENABLED=true
      - STATS__SERVER__HTTP__CORS__ALLOWED_ORIGIN=*
      - VIRTUAL_HOST=stats.kaolin.golem.neti-soft.dev
      - VIRTUAL_PORT=8050
      - LETSENCRYPT_HOST=stats.kaolin.golem.neti-soft.dev
      - LETSENCRYPT_EMAIL=kacper.zuk@neti-soft.com

volumes:
  backend-dets:
  backend-logs:
  blockscout-db-data:
  golem-base-indexer:
  redis-data:
  op_geth_data:
  op_node_data:
  jwt_shared:
  certs:
  stats-db-data:
